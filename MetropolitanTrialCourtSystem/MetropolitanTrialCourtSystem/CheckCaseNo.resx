<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAAu4AAALuABDw7X4QAACPRJREFUWEe1mXlUVNcd
        x3+mp+dY+097ThvTNE21JIi7IDCiwaBGDLINKFDXkIiO7MiAoKwDKOA4w2IUZWuqFtC4R9DTGnsSYd7s
        KCIZF9B61LQ92riyzAC/3vveAAOzsIiX8z2PMzzu/fD9Lfe+B5x98FW/zj86Ckfv5EMm4w15yiAQa0Ig
        W8mH3df8IEW9AkRaP8jQ+k3YqfKwE6k8NyYqFlYkKBcq4+ULdNvkPF2c3IXIVbeN4eni5W70s0vpGs8S
        cr9/ovyjd9LVPpCmXgYZ8mWQqvCAvKtBINVshCQFD7K03lDVKoKTbZlEGf0aMWCqxgsyNN525LotXuHG
        COVuz+MYHhIgo0y/NxUPCegToXxRXYrq0zUp6iW/yZR/Mn6AOcoAyL3Gn5ysWioiTt2PkztjLFmYyjKQ
        ZXH3U1hXbarc47M0xZKf510NHjtgvjIYJJo1kC5fuTpJ5a6LYSiYi9nCoxUH6oIJ8oWX8hpXOxdoQscC
        6AO7FYETd6n8dsUyLr2xBM7SYq8jOmeCYuH/8tRBgmSF2+gARXLfCdsZ99JYEk7611paYDxE549nFvQI
        Fc5J2VpfK4APD3N6cBjqfjxGbtr7yyT5x2UxcqdxCelwopBRjBNmaX2Sa9qy3zIDPHmvgNWpe4VQdXs3
        SJvDxNHkF96kc1TRjCNGyuaSKzViPimeBd3lOuGmM3dzBgOeasuF00Rn7uZDceNngdEyR2MivxnRqGyV
        zST5twgztL4oVCzECNksjGHmk3C7Pf7b7aQ5JwjY161prKDo+udQ1BQKh1oifp+iWtYWTW603tNeTxRu
        S70DHvwhBu8+b8IX+p+w9XkjHmiJYiGjZE6Y08j/trp1x8QjtxOACpLk7pDEuIOQcct6E9XaJwq3uX4a
        VtxMRH1PB5qOdv1LzGICMUo+m703S+sb/OWNcCB/CECeehXkqPymxjEuD0hLMZt4PMTCXXHAyptJ2NH9
        yog1eFTLinDdqT9hvMoFya7zfWHzlkn7b0QD7G1cDTka79RotqVYXuB1RKuUOldOnOu0AkdHNbMPP8md
        jII6RxSqeb37WrbwK24JAUpvCCcmKT2aY94AIHUujMBR52zBtetfYcwRb/Ta8z4GFE7DsNrZKGryrim7
        EwdQ0hy1NF7OM4x35Q44l0DC+tKIYj46Cdze2jhcseddDCiahv5Se/Qv+BAjLro+3NOy/lcgblybwVWu
        pYXYk4iFz22Lq9Zp+BfiXNeQgjAdXYZOFJ+PJaF9G/kEirpHRSEDCu3bg8qnu5Hzmedx2oNMF6BQ9HAQ
        3jALBQ0z2IZq+nNb6qvWypvbbYa1U99OnIvFZSwcBeLg+uQn/dDgL7HzhUSlewOddGARHulH8zBW5ozF
        zQL86tZOzG4MYGEH32euPucstRLToe/uZMM61DlT8QvtMaR4Tg5Ey5wYckZjF6BX6hzt8o2PLxmnQ3xl
        eI5Vd0QoIE2WgzQPO+vcFRJWHSkIg3XnOtico879loMjeWcJkIo4eBRI/slMF9xaPxPP3y8xTjcwunv0
        WN2azTo0NCU4OHus0NluJV2GDpTUEefyJrMOWYLqk49kCgoql38LUYyjrK8QqHs0vLefaYxTDh69vT1Y
        07aLzTGuqfPYK3WO5lzXMDknPh/D5dwwcFQr8t9F0ekvrsIO1VImhj29cE5slc1G9eOLxmnNh6FXj1Ws
        kw7sSWRzPeec7VZCndtmLAgK4GAGNFQUcPdZgRqk10NV4Q3cHkidjJDNQXHTeuwwvDBObz56yFdNWw6G
        fjeF7XNd3e3Gn5gPfXcXm3NsWK0UhCWtFP8R005sPAlltxK/3towkwXsy0VB/XT2hPHS8NS4jPkw9HRi
        /Y8n8JX+mfET80HDKqklzuWNLKwDsieAf8CK73LzoeJWcmQEaSEc4IC2XJmOJT9EkYq0HjpbgzonIa3E
        Wp+zJbqT+EimorLt8nb4x4Nyf6HCrYd7/jCF5CqTOvnKYN0lS6ODbcK0z40urH2icJvK3PX/fvqvpaDv
        6Xw/91rwTxENc4YAGiFJMZSQA6atnDQddPuS1sWTnBu9c1SBpIA883+Hu85tPdfdY/gZPOv6L3kekWSS
        POzta9hDRSv1AAl3+zCQA9vXZDZMlgCGFzksSD/oFZ0M8yu8kAQg/89puHD/4K+jGuY1Wzuw0pMO7X0H
        W2KshrvT0M45N4acM5VfwQcYVDzj++QjwZNSqzYAiFRekKH0hAT2yG97r6WQB1qiyW4xuK1wrYTuEBRu
        rM4NKKzso+DU6nUgOv4FgLRpA6sDLeHvJauWkIcm2rStHbFc2P24+LoAbzxS4dOXT/DWo6uYezYcl4+y
        z5nLAb33TqHFcaGgNm6i+FwkUEF1WzaQB2aoIc+jh65HromVzTceCCwBUtFmPoscKF3IZIsxqHA2eonf
        IwuMPaxUvhI7DPly7gvp2biZB+pSYH/tDlZw7J6E1XGiE60FUHB9M3lwd7QANkTK+fj5NzPQVzoV+ewB
        0/LCIxEtKFK93dLa6M2Vf8+GQ3Vp/YKzD4/06xv21Yd4UjKzuIx7RrHtpFDDQ8EFR7KIPfIllhcfiXyl
        dhhe/nFy5T8z3iq9mA4H61L7BWce/LVf5x5VwdE7eZDF+ExIkC0q5UJtu3AGIMkhU2oZwJpozgYWTe9Y
        VThte1T5Eii/nAYjAsyUrSTym5ij5u8ikL3D5aRQs6Af0l8yfLjpvuxP2klgkcOTtcVOa/68bzZElnmM
        DjCbCQSJdj3sZFbwyQm7iULaAh2pkzTfjMf5y5GlnzqvL3KGkH2zRg+YxQSAWLsW0hlvyFavnLxD5Sna
        pqCvgAmolVckHKQTCzIAyTnqT5o3n1yDi2ddi6xcERF20OMXkaVeMA6A5Hu1F6Rq/CBNu9L4En0BE8++
        RB8MSLdKFrJuHgkfzTEK6EAr9ElI8cy6Dftd1mwpdX878UgQbCpZDMTB8QNM0fhARqMvpGv9J+xUe9hl
        qpYb/w2xSE4OusZ/Q7jq4hSuuniVqy702FxdcOGcK6Txlm44xPNft3/uO6ElbiAoXQzCw6tGCJgK/wdb
        1h6LjeQpCAAAAABJRU5ErkJggg==
</value>
  </data>
</root>